ARG OS="ubuntu:20.04"
ARG ARCH=x64
ARG PLATFORM=linux
ARG RUNNER_VERSION="2.317.0"

FROM $OS

# Prevents installdependencies.sh from prompting the user and blocking the image creation
ARG DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN apt update -y && apt upgrade -y
RUN apt install -y --no-install-recommends \
    ca-certificates curl jq build-essential libssl-dev libffi-dev python3 python3-venv python3-dev python3-pip

RUN install -m 0755 -d /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc \
    && chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
RUN echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null

RUN apt-get update -y      

RUN apt-get install -y nvidia-container-toolkit
# Add a non-root user
RUN useradd -m docker

WORKDIR /home/docker

# Download the GitHub runner
RUN mkdir actions-runner \
    && cd actions-runner \
    && curl -O -L https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-${PLATFORM}-${ARCH}-${RUNNER_VERSION}.tar.gz \
    && tar xzf ./actions-runner-${PLATFORM}-${ARCH}-${RUNNER_VERSION}.tar.gz

WORKDIR /home/docker/actions-runner

# # Install the runner
RUN ./bin/installdependencies.sh


# Copy entrypoint script
COPY ./entrypoint.sh /home/docker/actions-runner/entrypoint.sh

RUN chown -R docker /home/docker/actions-runner

USER docker

ENTRYPOINT ["/home/docker/actions-runner/entrypoint.sh"]
